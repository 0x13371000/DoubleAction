package da.protobuf;

import "math.proto";

message GameData
{
	optional bool debug = 1;
	optional string map_name = 2;
	optional string server_name = 3;
	optional int32 timestamp = 4;
	optional PlayerPositions positions = 5;
	optional bool cheats = 6;
	optional PlayerPositions kills = 7;
	optional PlayerPositions deaths = 8;
	optional int32 connections = 9;
	optional bool teamplay = 10;

	// For da_version before 3, you'll have thirdperson_active * 10 total player seconds
	// For da_version 3 and later, you'll have thirdperson_active total player seconds
	optional int32 thirdperson_active = 11;
	optional int32 thirdperson_inactive = 12;

	optional int32 disconnections = 13;
	optional int32 unique_players_this_map = 14;
	optional int32 da_version = 15;

	repeated string characters_chosen = 16;
	repeated int32 weapons_chosen = 17;
	repeated int32 skills_chosen = 18;
	repeated VoteResult votes = 19;

	repeated string weapons_chosen_s = 20;
	repeated string skills_chosen_s = 21;

	optional float map_time = 22;

	// Total player seconds people playing with VR on
	optional int32 vr_active = 23;
	// Total player seconds people playing with VR off
	optional int32 vr_inactive = 24;

	// Total player seconds people playing on each platform
	optional int32 platform_windows = 25;
	optional int32 platform_linux = 26;
	optional int32 platform_osx = 27;

	repeated KillInfo kill_details = 28;

	repeated PlayerList player_list = 29;
}

message PlayerPositions
{
	repeated Vector position = 1;
}

message VoteResult
{
	optional string issue = 1;
	optional string details = 2;
	optional bool result = 3;
}

// 1 << KILL_WHATEVER to get a mask into killer_flags and victim_flags
// Can have up to 64 flags here, any more and make a new one.
enum KillFlags {
	KILL_THIRDPERSON = 0;
	KILL_AIMIN = 1;
	KILL_DIVING = 2;
	KILL_ROLLING = 3;
	KILL_SLIDING = 4;
	KILL_FLIPPING = 5;
	KILL_SUPERFALLING = 6;
	KILL_BY_GRENADE = 7;
	KILL_BY_BRAWL = 8;
	KILL_SKILL_ACTIVE = 9;
	KILL_SUPER_SKILL_ACTIVE = 10;
	KILL_IS_TARGET = 11;
	KILL_HAS_BRIEFCASE = 12;
	KILL_IS_BOT = 13;
	KILL_IS_SUICIDE = 14;
}

message PlayerInfo
{
	optional Vector position = 1;
	optional int32 health = 2;
	optional uint64 flags = 3; // KillFlags
	optional string weapon = 4;
	optional string skill = 5;
	optional uint32 accountid = 6;
	optional float style = 7;
	optional float total_style = 8;
	optional uint32 kills = 9;
	optional uint32 deaths = 10;
	optional uint32 waypoint = 11;
	optional Vector objective_position = 12;
	optional string slowmo_type = 13;
	optional float slowmo_seconds = 14;
}

message KillInfo
{
	optional PlayerInfo victim = 1;
	optional PlayerInfo killer = 2;

	optional Vector grenade_position = 3;
}

message PlayerList
{
	optional int32 accountid = 1;
	optional string name = 2;
	optional float style = 3;
}

message ServerReply
{
	optional string daily_leader = 1;
	optional float daily_leader_style = 2;
	optional string weekly_leader = 3;
	optional float weekly_leader_style = 4;
	optional string monthly_leader = 5;
	optional float monthly_leader_style = 6;
}
